// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ErlangInsect2Shift
List ErlangInsect2Shift(double t, NumericVector y, NumericVector params);
RcppExport SEXP _VART_ErlangInsect2Shift(SEXP tSEXP, SEXP ySEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(ErlangInsect2Shift(t, y, params));
    return rcpp_result_gen;
END_RCPP
}
// ErlangInsectSimple
List ErlangInsectSimple(double t, NumericVector y, NumericVector params);
RcppExport SEXP _VART_ErlangInsectSimple(SEXP tSEXP, SEXP ySEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(ErlangInsectSimple(t, y, params));
    return rcpp_result_gen;
END_RCPP
}
// ErlangInsect_Spray
List ErlangInsect_Spray(double t, NumericVector y, NumericVector params);
RcppExport SEXP _VART_ErlangInsect_Spray(SEXP tSEXP, SEXP ySEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(ErlangInsect_Spray(t, y, params));
    return rcpp_result_gen;
END_RCPP
}
// ErlangInsect_Shift
List ErlangInsect_Shift(double t, NumericVector y, NumericVector params);
RcppExport SEXP _VART_ErlangInsect_Shift(SEXP tSEXP, SEXP ySEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(ErlangInsect_Shift(t, y, params));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_VART_ErlangInsect2Shift", (DL_FUNC) &_VART_ErlangInsect2Shift, 3},
    {"_VART_ErlangInsectSimple", (DL_FUNC) &_VART_ErlangInsectSimple, 3},
    {"_VART_ErlangInsect_Spray", (DL_FUNC) &_VART_ErlangInsect_Spray, 3},
    {"_VART_ErlangInsect_Shift", (DL_FUNC) &_VART_ErlangInsect_Shift, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_VART(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
